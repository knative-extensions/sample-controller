// +build !ignore_autogenerated

/*
Copyright 2019 The Knative Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1beta1

import (
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	samples "knative.dev/sample-controller/pkg/apis/samples"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*AddressableService)(nil), (*samples.AddressableService)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_AddressableService_To_samples_AddressableService(a.(*AddressableService), b.(*samples.AddressableService), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*samples.AddressableService)(nil), (*AddressableService)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_samples_AddressableService_To_v1beta1_AddressableService(a.(*samples.AddressableService), b.(*AddressableService), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AddressableServiceList)(nil), (*samples.AddressableServiceList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_AddressableServiceList_To_samples_AddressableServiceList(a.(*AddressableServiceList), b.(*samples.AddressableServiceList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*samples.AddressableServiceList)(nil), (*AddressableServiceList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_samples_AddressableServiceList_To_v1beta1_AddressableServiceList(a.(*samples.AddressableServiceList), b.(*AddressableServiceList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AddressableServiceSpec)(nil), (*samples.AddressableServiceSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_AddressableServiceSpec_To_samples_AddressableServiceSpec(a.(*AddressableServiceSpec), b.(*samples.AddressableServiceSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*samples.AddressableServiceSpec)(nil), (*AddressableServiceSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_samples_AddressableServiceSpec_To_v1beta1_AddressableServiceSpec(a.(*samples.AddressableServiceSpec), b.(*AddressableServiceSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AddressableServiceStatus)(nil), (*samples.AddressableServiceStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_AddressableServiceStatus_To_samples_AddressableServiceStatus(a.(*AddressableServiceStatus), b.(*samples.AddressableServiceStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*samples.AddressableServiceStatus)(nil), (*AddressableServiceStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_samples_AddressableServiceStatus_To_v1beta1_AddressableServiceStatus(a.(*samples.AddressableServiceStatus), b.(*AddressableServiceStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*samples.AddressableServiceStatus)(nil), (*AddressableServiceStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_samples_AddressableServiceStatus_To_v1beta1_AddressableServiceStatus(a.(*samples.AddressableServiceStatus), b.(*AddressableServiceStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*AddressableServiceStatus)(nil), (*samples.AddressableServiceStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_AddressableServiceStatus_To_samples_AddressableServiceStatus(a.(*AddressableServiceStatus), b.(*samples.AddressableServiceStatus), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta1_AddressableService_To_samples_AddressableService(in *AddressableService, out *samples.AddressableService, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_AddressableServiceSpec_To_samples_AddressableServiceSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_AddressableServiceStatus_To_samples_AddressableServiceStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_AddressableService_To_samples_AddressableService is an autogenerated conversion function.
func Convert_v1beta1_AddressableService_To_samples_AddressableService(in *AddressableService, out *samples.AddressableService, s conversion.Scope) error {
	return autoConvert_v1beta1_AddressableService_To_samples_AddressableService(in, out, s)
}

func autoConvert_samples_AddressableService_To_v1beta1_AddressableService(in *samples.AddressableService, out *AddressableService, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_samples_AddressableServiceSpec_To_v1beta1_AddressableServiceSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_samples_AddressableServiceStatus_To_v1beta1_AddressableServiceStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_samples_AddressableService_To_v1beta1_AddressableService is an autogenerated conversion function.
func Convert_samples_AddressableService_To_v1beta1_AddressableService(in *samples.AddressableService, out *AddressableService, s conversion.Scope) error {
	return autoConvert_samples_AddressableService_To_v1beta1_AddressableService(in, out, s)
}

func autoConvert_v1beta1_AddressableServiceList_To_samples_AddressableServiceList(in *AddressableServiceList, out *samples.AddressableServiceList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]samples.AddressableService, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_AddressableService_To_samples_AddressableService(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1beta1_AddressableServiceList_To_samples_AddressableServiceList is an autogenerated conversion function.
func Convert_v1beta1_AddressableServiceList_To_samples_AddressableServiceList(in *AddressableServiceList, out *samples.AddressableServiceList, s conversion.Scope) error {
	return autoConvert_v1beta1_AddressableServiceList_To_samples_AddressableServiceList(in, out, s)
}

func autoConvert_samples_AddressableServiceList_To_v1beta1_AddressableServiceList(in *samples.AddressableServiceList, out *AddressableServiceList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AddressableService, len(*in))
		for i := range *in {
			if err := Convert_samples_AddressableService_To_v1beta1_AddressableService(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_samples_AddressableServiceList_To_v1beta1_AddressableServiceList is an autogenerated conversion function.
func Convert_samples_AddressableServiceList_To_v1beta1_AddressableServiceList(in *samples.AddressableServiceList, out *AddressableServiceList, s conversion.Scope) error {
	return autoConvert_samples_AddressableServiceList_To_v1beta1_AddressableServiceList(in, out, s)
}

func autoConvert_v1beta1_AddressableServiceSpec_To_samples_AddressableServiceSpec(in *AddressableServiceSpec, out *samples.AddressableServiceSpec, s conversion.Scope) error {
	out.ObjectReference = in.ObjectReference
	return nil
}

// Convert_v1beta1_AddressableServiceSpec_To_samples_AddressableServiceSpec is an autogenerated conversion function.
func Convert_v1beta1_AddressableServiceSpec_To_samples_AddressableServiceSpec(in *AddressableServiceSpec, out *samples.AddressableServiceSpec, s conversion.Scope) error {
	return autoConvert_v1beta1_AddressableServiceSpec_To_samples_AddressableServiceSpec(in, out, s)
}

func autoConvert_samples_AddressableServiceSpec_To_v1beta1_AddressableServiceSpec(in *samples.AddressableServiceSpec, out *AddressableServiceSpec, s conversion.Scope) error {
	out.ObjectReference = in.ObjectReference
	return nil
}

// Convert_samples_AddressableServiceSpec_To_v1beta1_AddressableServiceSpec is an autogenerated conversion function.
func Convert_samples_AddressableServiceSpec_To_v1beta1_AddressableServiceSpec(in *samples.AddressableServiceSpec, out *AddressableServiceSpec, s conversion.Scope) error {
	return autoConvert_samples_AddressableServiceSpec_To_v1beta1_AddressableServiceSpec(in, out, s)
}

func autoConvert_v1beta1_AddressableServiceStatus_To_samples_AddressableServiceStatus(in *AddressableServiceStatus, out *samples.AddressableServiceStatus, s conversion.Scope) error {
	out.Status = in.Status
	// WARNING: in.Address requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_samples_AddressableServiceStatus_To_v1beta1_AddressableServiceStatus(in *samples.AddressableServiceStatus, out *AddressableServiceStatus, s conversion.Scope) error {
	out.Status = in.Status
	// WARNING: in.URL requires manual conversion: does not exist in peer-type
	return nil
}
